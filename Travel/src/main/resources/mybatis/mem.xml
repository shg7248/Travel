<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mem.model.Mem">
	<update id="UpdateMemberPwd">
		update member 
		set pwd = #{pwd}
		where mnum = #{mnum}
	</update>
	
	<insert id="InsertAccountMember">
		insert into account 
		values(#{accnum},#{mnum},#{bank})
	</insert>
	
	<select id="SelectAccountList" resultType="MyAccount">
		select * from account 
		where mnum = #{mnum}
	</select>
	
	<select id="selectOrder" resultType="OrdersBean">
		with a as (
			select  onum, 
					a.anum,
					ro.rnum, 
					to_date(startdate || '' || a.starttime, 'yyyyMMddhh24') as startDate, 
					to_date(enddate|| '' || a.endtime, 'yyyyMMddhh24') as endDate,
					(to_date(enddate, 'yyyyMMdd') - to_date(startdate, 'yyyyMMdd') + 1) * ro.price as price,
					ro.name as rname,
					a.name as aname,
					(select count(*)
						from orders o1
						inner join review r
						on o1.onum = r.onum
						where o1.onum = o.onum ) as reviewCount
			from orders o
			inner join room ro
			on o.rnum = ro.rnum
			inner join accom a
			on ro.anum = a.anum
		),
		b as(
			<![CDATA[select onum, anum, rname, aname, reviewCount, price, case when sysdate < startDate then 0]]>
						<![CDATA[when sysdate >= startDate  and sysdate < endDate then 1]]>
						else 2 end as resStatus
			from a
		)
		select *
		from b
		inner join orders o
		on b.onum = o.onum
		where mnum = #{mnum}
		order by reviewCount, resStatus desc
	</select>
	
	<delete id="DeleteMember">
		delete member 
		where mnum = #{mnum}
	</delete>
	
	<select id="SearchAccount" resultType="int">
		select count(*)
		from account
		where accnum = #{accnum}
	</select>
	
	<delete id="DeleteAccnum">
		delete account 
		where accnum = #{accnum}
	</delete>
	
	<delete id="DeleteOrder">
		delete orders
		where onum = #{onum}
	</delete>
	
	<select id="GetMemberPointTotalCountByMnum" resultType="int">
		select count(*) from point
		where mnum = #{mnum}
	</select>
	
	<select id="GetMemberPointListByMnum" resultType="PointBean">
		select * from point
		where mnum = #{mnum}
		order by pnum desc
	</select>
	
	<select id="GetUserInfoByMnum" resultType="MyMember">
		select m.mnum, email, name, pwd, phone, flatform, reg_date, p.point
		from member m
		left outer join (
			select mnum, sum(point) point
			from point
			group by mnum
		) p
		on m.mnum = p.mnum
		where m.mnum = #{mnum}
	</select>
</mapper>